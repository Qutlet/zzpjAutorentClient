{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\macie\\\\Desktop\\\\AutoRent-client-main\\\\src\\\\components\\\\Messages\\\\Messages.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Conversations from './Conversations';\nimport MessageBox from './MessageBox';\nimport styled from 'styled-components';\nconst Container = styled.div`\n    width: 70%;\n    min-height: 600px;\n    height: 600px;\n    border: 1px solid black;\n    display: flex;\n    margin: auto;\n    margin-top: 50px;\n`;\n_c = Container;\n\nclass Messages extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      conversations: [],\n      messages: []\n    };\n\n    this.handleClickConversation = user => {\n      let messages = this.state.conversations.filter(c => c.sender == user.name || c.reciever == user.name);\n      this.setState({\n        current_conversant: user,\n        messages\n      });\n    };\n\n    this.reloadMessages = () => {\n      let config = {\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': this.props.userdata.authToken\n        }\n      };\n      axios.get('https://autorentserver.azurewebsites.net/api/messages', config).then(res => {\n        this.setState({\n          conversations: res.data.messages,\n          user: res.data.user\n        });\n        let messages = this.state.conversations.filter(c => c.sender == this.state.current_conversant.name || c.reciever == this.state.current_conversant.name);\n        this.setState({\n          messages\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.componentDidMount = () => {\n      let config = {\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': this.props.userdata.authToken\n        }\n      };\n      axios.get('https://autorentserver.azurewebsites.net/api/messages', config).then(res => {\n        this.setState({\n          conversations: res.data.messages,\n          user: res.data.user\n        });\n        console.log(this.state.conversations);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Conversations, {\n        handleClickConversation: user => this.handleClickConversation(user),\n        conversations: this.state.conversations,\n        user: this.state.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MessageBox, {\n        current_conversant: this.state.current_conversant,\n        messages: this.state.messages,\n        user: this.state.user,\n        reloadMessages: this.reloadMessages,\n        userdata: this.props.userdata\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"sources":["C:/Users/macie/Desktop/AutoRent-client-main/src/components/Messages/Messages.js"],"names":["React","Component","axios","Conversations","MessageBox","styled","Container","div","Messages","state","conversations","messages","handleClickConversation","user","filter","c","sender","name","reciever","setState","current_conversant","reloadMessages","config","headers","props","userdata","authToken","get","then","res","data","catch","err","console","log","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport Conversations from './Conversations';\nimport MessageBox from './MessageBox';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    width: 70%;\n    min-height: 600px;\n    height: 600px;\n    border: 1px solid black;\n    display: flex;\n    margin: auto;\n    margin-top: 50px;\n`\n\nclass Messages extends Component {\n    state = {\n        conversations: [],\n        messages: []\n    }\n\n    handleClickConversation = (user) => {\n        let messages = this.state.conversations.filter(c => c.sender == user.name || c.reciever == user.name);\n        this.setState({\n            current_conversant: user,\n            messages\n        });\n    }\n\n    reloadMessages = () => {\n        let config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': this.props.userdata.authToken\n            }\n        };\n          \n        axios.get('https://autorentserver.azurewebsites.net/api/messages', config)\n            .then((res) => {\n               this.setState({\n                    conversations:res.data.messages,\n                    user: res.data.user\n                });\n                let messages = this.state.conversations.filter(c => c.sender == this.state.current_conversant.name || c.reciever == this.state.current_conversant.name);\n                this.setState({\n                    messages\n                });\n            })\n            .catch(err => {\n                console.log(err)\n            });\n    }\n\n    componentDidMount = () => {\n        let config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': this.props.userdata.authToken\n            }\n        };\n          \n        axios.get('https://autorentserver.azurewebsites.net/api/messages', config)\n            .then((res) => {\n               this.setState({\n                    conversations:res.data.messages,\n                    user: res.data.user\n                });\n                console.log(this.state.conversations)\n            })\n            .catch(err => {\n                console.log(err)\n            });\n    }\n\n    render() { \n        return (\n            <Container>\n                <Conversations\n                    handleClickConversation={(user) => this.handleClickConversation(user)} conversations={this.state.conversations}\n                    user={this.state.user}\n                    />\n                <MessageBox\n                    current_conversant={this.state.current_conversant}\n                    messages={this.state.messages}\n                    user={this.state.user}\n                    reloadMessages={this.reloadMessages}\n                    userdata={this.props.userdata}>\n                </MessageBox>\n            </Container>\n        );\n    }\n}\n \nexport default Messages;"]},"metadata":{},"sourceType":"module"}